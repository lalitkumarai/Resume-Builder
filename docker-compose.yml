version: '3.8'

services:
  # Resume Builder Frontend Application
  resume-builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: resume-builder-app
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REACT_APP_ENVIRONMENT=production
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_VERSION=1.0.0
      - BACKEND_URL=http://backend:3001
    volumes:
      # Mount logs for debugging
      - ./logs/nginx:/var/log/nginx
    networks:
      - resume-builder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.resume-builder.rule=Host(`localhost`)"
      - "traefik.http.services.resume-builder.loadbalancer.server.port=80"

  # Backend API (placeholder for future implementation)
  backend:
    image: node:18-alpine
    container_name: resume-builder-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://user:password@postgres:5432/resumebuilder
    volumes:
      - ./backend:/app
    working_dir: /app
    command: sh -c "echo 'Backend service placeholder - implement your API here' && sleep infinity"
    networks:
      - resume-builder-network
    restart: unless-stopped
    depends_on:
      - postgres

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: resume-builder-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=resumebuilder
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - resume-builder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d resumebuilder"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: resume-builder-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - resume-builder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (for multiple app instances)
  nginx-lb:
    image: nginx:alpine
    container_name: resume-builder-lb
    ports:
      - "8080:80"
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf:ro
    networks:
      - resume-builder-network
    restart: unless-stopped
    depends_on:
      - resume-builder

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  resume-builder-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
